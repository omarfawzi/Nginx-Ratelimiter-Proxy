env UPSTREAM_HOST;
env UPSTREAM_PORT;
env MCROUTER_HOST;
env MCROUTER_PORT;

worker_processes auto;

events {
    worker_connections 1024;
}

http {
    resolver 127.0.0.11;
    lua_shared_dict global_throttle_cache 10m;

    init_by_lua_block {
        local yaml = require('lyaml')
        local file = io.open('/usr/local/openresty/nginx/lua/ratelimits.yaml', 'r')
        if not file then
            ngx.log(ngx.ERR, 'failed to open /usr/local/openresty/nginx/lua/ratelimits.yaml.')
            return
        end

        local content = file:read("*all")
        file:close()

        local success, parsed_yaml = pcall(yaml.load, content)
        if not success then
            ngx.log(ngx.ERR, 'failed to parse YAML: ', parsed_yaml)
            return
        end

        _G.ratelimits = parsed_yaml.ratelimits or {}
        _G.ignored_users = parsed_yaml.ignoredSegments and parsed_yaml.ignoredSegments.users or {}
        _G.ignored_ips = parsed_yaml.ignoredSegments and parsed_yaml.ignoredSegments.ips or {}
    }

    server {
        listen 49152;

        location / {
            set_by_lua $upstream_host 'return os.getenv("UPSTREAM_HOST") or "127.0.0.1"';
            set_by_lua $upstream_port 'return os.getenv("UPSTREAM_PORT") or "80"';
            access_by_lua_file /usr/local/openresty/nginx/lua/main.lua;
            proxy_pass http://$upstream_host:$upstream_port;
        }
    }
}
