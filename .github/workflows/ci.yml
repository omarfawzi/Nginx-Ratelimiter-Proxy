name: CI Pipeline

on:
  push:
    branches:
      - master
    tags:
      - '*'
  pull_request:

jobs:
  build:
    name: Build Docker Images
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry (GHCR)
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Convert Repository Name to Lowercase
        run: echo "REPO_NAME=$(echo ${{ github.repository }} | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV

      - name: Sanitize ref name for image tags
        run: echo "REF_SLUG=$(echo ${{ github.ref_name }} | tr '/:' '-')" >> $GITHUB_ENV

      - name: Build and Push Release Docker Image
        uses: docker/build-push-action@v5
        if: startsWith(github.ref, 'refs/tags/')
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ghcr.io/${{ env.REPO_NAME }}:${{ github.ref_name }}
          target: local

      # Build and push the test image separately
      - name: Build and Push Test Docker Image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ghcr.io/${{ env.REPO_NAME }}:test-${{ env.REF_SLUG }}
          target: test

  test:
    name: Run Tests
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Log in to GitHub Container Registry (GHCR)
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Convert Repository Name to Lowercase
        run: echo "REPO_NAME=$(echo ${{ github.repository }} | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV

      - name: Sanitize ref name for image tags
        run: echo "REF_SLUG=$(echo ${{ github.ref_name }} | tr '/:' '-')" >> $GITHUB_ENV

      - name: Pull Test Docker Image
        run: docker pull ghcr.io/${{ env.REPO_NAME }}:test-${{ env.REF_SLUG }}

      - name: Run Tests with Coverage
        run: docker run --rm -v ${{ github.workspace }}/coverage:/coverage ghcr.io/${{ env.REPO_NAME }}:test-${{ env.REF_SLUG }} sh -c "busted --coverage --pattern=_test /usr/local/openresty/nginx/lua && luacov && mv /usr/local/openresty/nginx/lua/luacov.report.out /coverage/coverage.out"

      - name: Upload Coverage Report as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage/coverage.out

      - name: Upload Coverage to Codecov
        uses: codecov/codecov-action@v5
        with:
          use_pypi: true
          files: coverage/coverage.out
          flags: unittests
          token: ${{ secrets.CODECOV_TOKEN }}

  release:
    name: Release Docker Image
    needs: test
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    permissions:
      contents: read
      packages: write
    steps:
      - name: Log in to GitHub Container Registry (GHCR)
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Convert Repository Name to Lowercase
        run: echo "REPO_NAME=$(echo ${{ github.repository }} | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV

      - name: Pull Release Docker Image
        run: docker pull ghcr.io/${{ env.REPO_NAME }}:${{ github.ref_name }}

      - name: Tag and Push Release Image
        run: |
          docker tag ghcr.io/${{ env.REPO_NAME }}:${{ github.ref_name }} ghcr.io/${{ env.REPO_NAME }}:latest
          docker push ghcr.io/${{ env.REPO_NAME }}:latest
