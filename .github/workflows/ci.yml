name: CI Pipeline

on:
  push:
    branches:
      - master
    tags:
      - '*'
  pull_request:

jobs:
  build:
    name: Build Docker Image
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry (GHCR)
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Convert Repository Name to Lowercase
        run: echo "REPO_NAME=$(echo ${{ github.repository }} | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ghcr.io/${{ env.REPO_NAME }}:${{ github.ref_name }}
          target: local

  test:
    name: Run Tests
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Log in to GitHub Container Registry (GHCR)
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Convert Repository Name to Lowercase
        run: echo "REPO_NAME=$(echo ${{ github.repository }} | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV

      - name: Pull Built Docker Image
        run: docker pull ghcr.io/${{ env.REPO_NAME }}:${{ github.ref_name }}

      - name: Run Tests with Coverage
        run: |
          docker run --rm -v ${{ github.workspace }}/coverage:/coverage ghcr.io/${{ env.REPO_NAME }}:${{ github.ref_name }} sh -c "
            busted --coverage --pattern=_test /usr/local/openresty/nginx/lua &&
            luacov &&
            mv /usr/local/openresty/nginx/lua/luacov.report.out /coverage/coverage.out || echo 'Coverage report not found!'"

      - name: Upload Coverage Report as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage/coverage.out

      - name: Convert LuaCov to lcov
        run: |
          luarocks install luacov-reporter-lcov
          luacov-reporter-lcov -i coverage/coverage.out > coverage/lcov.info

      - name: Upload Coverage to Codecov
        uses: codecov/codecov-action@v5
        with:
          files: coverage/lcov.info
          token: ${{ secrets.CODECOV_TOKEN }}
